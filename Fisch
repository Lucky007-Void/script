-- ‡πÇ‡∏´‡∏•‡∏î Fluent UI Library
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏Å
local Window = Fluent:CreateWindow({
    Title = "Fisch",
    SubTitle = "LuckyZ Hub",
    TabWidth = 160,
    Size = UDim2.fromOffset(500, 350),
    Acrylic = false,
    Theme = "Dark"
})

-- ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏´‡∏•‡∏±‡∏Å
local Player = game:GetService("Players")
local LocalPlayer = Player.LocalPlayer
local Char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Char:WaitForChild("Humanoid")
local VirtualInputManager = game:GetService("VirtualInputManager")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")

local function equipitem(v)
    if LocalPlayer.Backpack:FindFirstChild(v) then
        local a = LocalPlayer.Backpack:FindFirstChild(v)
        Humanoid:EquipTool(a)
    end
end

------------------------------------------------------------
-- üìÇ Tab : Main
------------------------------------------------------------
local TabMain = Window:AddTab({ Title = "Main", Icon = "rbxassetid://4483345998" })

-- AutoCast
TabMain:AddToggle("AutoCast", {
    Title = "AutoCast",
    Default = false,
    Callback = function(v)
        _G.AutoCast = v
        pcall(function()
            while _G.AutoCast do
                task.wait(0.2)
                local Rod = Char:FindFirstChildOfClass("Tool")
                if not Rod then
                        Rod = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Elder Mossripper")
                end
                    if Rod and Rod:FindFirstChild("events") and Rod.events:FindFirstChild("castAsync") then
                            Rod.events.castAsync:InvokeServer(math.random(95,100), 1)
                end
            end
        end)
    end
})

-- AutoShake
TabMain:AddToggle("AutoShake", {
    Title = "AutoShake",
    Default = false,
    Callback = function(v)
        _G.AutoShake = v
        pcall(function()
            local function startShakeUI(shakeUI)
                if not shakeUI then return end
                local function tryClick(button)
                    if button and button.Visible then
                        GuiService.SelectedObject = button
                        VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Return, false, game)
                        VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Return, false, game)
                    end
                end
                local function monitorSafezone()
                    local safezone = shakeUI:FindFirstChild("safezone")
                    if safezone then
                        local button = safezone:FindFirstChild("button")
                        tryClick(button)
                        safezone.ChildAdded:Connect(function(child)
                            if _G.AutoShake and child.Name == "button" then
                                tryClick(child)
                                child:GetPropertyChangedSignal("Visible"):Connect(function()
                                    if _G.AutoShake and child.Visible then
                                        tryClick(child)
                                    end
                                end)
                            end
                        end)
                        if button then
                            button:GetPropertyChangedSignal("Visible"):Connect(function()
                                if _G.AutoShake and button.Visible then
                                    tryClick(button)
                                end
                            end)
                        end
                    end
                end
                shakeUI:GetPropertyChangedSignal("Enabled"):Connect(function()
                    if _G.AutoShake and shakeUI.Enabled then
                        monitorSafezone()
                    end
                end)
                if shakeUI.Enabled then
                    monitorSafezone()
                end
            end
            local PlayerGUI = LocalPlayer:WaitForChild("PlayerGui")
            if PlayerGUI:FindFirstChild("shakeui") then
                startShakeUI(PlayerGUI.shakeui)
            end
            PlayerGUI.ChildAdded:Connect(function(child)
                if _G.AutoShake and child.Name == "shakeui" then
                    startShakeUI(child)
                end
            end)
        end)
    end
})

-- AutoReel
TabMain:AddToggle("AutoReel", {
    Title = "AutoReel",
    Default = false,
    Callback = function(v)
        _G.AutoReel = v
        pcall(function()
            while _G.AutoReel do
                task.wait()
                for _, gui in pairs(LocalPlayer.PlayerGui:GetChildren()) do
                    if gui:IsA("ScreenGui") and gui.Name == "reel" then
                        if gui:FindFirstChild("bar") then
                            task.wait(0.15)
                            ReplicatedStorage.events.reelfinished:FireServer(100, true)
                        end
                    end
                end
            end
        end)
    end
})


TabMain:AddToggle("Anchored", {
    Title = "Anchored",
    Default = false,
    Callback = function(state)
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local RunService = game:GetService("RunService")

        if state then
            local initialCFrame = nil

            -- ‡∏£‡∏≠‡πÉ‡∏´‡πâ Character ‡∏û‡∏£‡πâ‡∏≠‡∏°
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                initialCFrame = LocalPlayer.Character.HumanoidRootPart.CFrame
            else
                LocalPlayer.CharacterAdded:Wait()
                LocalPlayer.Character:WaitForChild("HumanoidRootPart")
                initialCFrame = LocalPlayer.Character.HumanoidRootPart.CFrame
            end

            -- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÅ‡∏•‡∏∞‡∏°‡∏∏‡∏°
            _G.TPLockConnection = RunService.RenderStepped:Connect(function()
                if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    LocalPlayer.Character.HumanoidRootPart.CFrame = initialCFrame
                end
            end)
        else
            if _G.TPLockConnection then
                _G.TPLockConnection:Disconnect()
                _G.TPLockConnection = nil
            end
        end
    end
})

task.spawn(function()
    while task.wait() do
        if _G.AutoCast then
            pcall(function()
                for _, v in pairs(LocalPlayer.Backpack:GetChildren()) do
                    if v:IsA("Tool") and v.Name:lower():find("rod") then
                        equipitem(v.Name)
                    end
                end
            end)
        end
    end
end)

------------------------------------------------------------
-- üìÇ Tab : Auto
------------------------------------------------------------
local TabAuto = Window:AddTab({ Title = "Auto", Icon = "rbxassetid://6035190846" })

local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local placeId = game.PlaceId

local SettingsFile = "LuckyZHubFisch.json"
local Settings = {}

-- ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
if isfile and isfile(SettingsFile) then
	local success, data = pcall(function()
		return HttpService:JSONDecode(readfile(SettingsFile))
	end)
	if success and data then
		Settings = data
	end
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤ (‡πÄ‡∏â‡∏û‡∏≤‡∏∞ AutoMossjaw)
local function SaveSettings()
	if writefile then
		writefile(SettingsFile, HttpService:JSONEncode({
			AutoMossjaw = Settings.AutoMossjaw
		}))
	end
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÉ‡∏´‡∏°‡πà
local function FindRandomServer()
	local url = "https://games.roblox.com/v1/games/"..placeId.."/servers/Public?sortOrder=Asc&limit=100"
	local success, result = pcall(function() return game:HttpGet(url) end)
	if success then
		local data = HttpService:JSONDecode(result)
		local servers = {}
		for _, server in ipairs(data.data) do
			if server.playing < server.maxPlayers and server.id ~= game.JobId then
				table.insert(servers, server.id)
			end
		end
		if #servers > 0 then
			return servers[math.random(1, #servers)]
		end
	end
	return nil
end

local function TeleportToRandomServer()
	local jobId = FindRandomServer()
	if jobId then
		TeleportService:TeleportToPlaceInstance(placeId, jobId, LocalPlayer)
	end
end

local function WaitForCharacter()
	if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
		LocalPlayer.CharacterAdded:Wait()
		LocalPlayer.Character:WaitForChild("HumanoidRootPart")
	end
end

local function ClickAtPosition(x, y)
    VirtualInputManager:SendMouseButtonEvent(x, y, 0, true, game, 1)  -- ‡∏Å‡∏î‡∏Ñ‡∏•‡∏¥‡∏Å
    task.wait(0.05)
    VirtualInputManager:SendMouseButtonEvent(x, y, 0, false, game, 1) -- ‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏Ñ‡∏•‡∏¥‡∏Å
end

local VirtualInputManager = game:GetService("VirtualInputManager")
local Camera = workspace.CurrentCamera

local function ClickRightCenter()
	local viewport = Camera.ViewportSize
	local x = viewport.X - 10  -- ‡∏´‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡∏≠‡∏ö‡∏Ç‡∏ß‡∏≤ 10 ‡∏û‡∏¥‡∏Å‡πÄ‡∏ã‡∏•
	local y = viewport.Y / 2   -- ‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á

	VirtualInputManager:SendMouseButtonEvent(x, y, 0, true, game, 1)
	task.wait(0.05)
	VirtualInputManager:SendMouseButtonEvent(x, y, 0, false, game, 1)
end

-- ‡∏à‡∏∏‡∏î‡∏ß‡∏≤‡∏õ Mossjaw
local MossjawPos = Vector3.new(-4863.9990234375, -1793.8779296875, -10125.3154296875)

local function StartAutoMossjaw()
	task.spawn(function()
		while Settings.AutoMossjaw do
			task.wait(1)
			local moss = workspace:FindFirstChild("Mossjaw")
			if moss then
				WaitForCharacter()
				task.wait(2)
				ClickRightCenter()
				task.wait(2)
				if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
					LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(MossjawPos)
				end
				task.wait(2)
				_G.AutoCast = true
				_G.AutoShake = true
				_G.AutoReel = true

				task.spawn(function()
					while _G.AutoCast and Settings.AutoMossjaw do
						task.wait(0.2)
						local Rod = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Tool")
						if not Rod then
							Rod = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Elder Mossripper")
						end
						if Rod and Rod:FindFirstChild("events") and Rod.events:FindFirstChild("castAsync") then
							Rod.events.castAsync:InvokeServer(math.random(95,100), 1)
						end
					end
				end)

				task.spawn(function()
					while _G.AutoShake and Settings.AutoMossjaw do
						task.wait(0.1)
						local shake = LocalPlayer.PlayerGui:FindFirstChild("shakeui")
						if shake and shake:FindFirstChild("safezone") then
							local btn = shake.safezone:FindFirstChild("button")
							if btn and btn.Visible then
								GuiService.SelectedObject = btn
								VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Return, false, game)
								VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Return, false, game)
							end
						end
					end
				end)

				task.spawn(function()
					while _G.AutoReel and Settings.AutoMossjaw do
						task.wait(0.3)
						for _, gui in pairs(LocalPlayer.PlayerGui:GetChildren()) do
							if gui:IsA("ScreenGui") and gui.Name == "reel" then
								if gui:FindFirstChild("bar") then
									task.wait(0.15)
									ReplicatedStorage.events.reelfinished:FireServer(100, true)
								end
							end
						end
					end
				end)

				repeat task.wait(1) until not workspace:FindFirstChild("Mossjaw") or not Settings.AutoMossjaw
				if Settings.AutoMossjaw then
					TeleportToRandomServer()
					task.wait(2)
				end
			else
				TeleportToRandomServer()
				task.wait(2)
			end
		end
	end)
end


TabAuto:AddToggle("AutoMossjaw", {
	Title = "Auto Mossjaw",
	Default = Settings.AutoMossjaw or false,
	Callback = function(v)
		Settings.AutoMossjaw = v
		SaveSettings()
		if v then
			StartAutoMossjaw()
		end
	end
})

-- ‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå
if Settings.AutoMossjaw then
	StartAutoMossjaw()
end

TabAuto:AddButton({
    Title = "Sell All Fish",
    Description = "‡∏Ç‡∏≤‡∏¢‡∏õ‡∏•‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
    Callback = function()
        ReplicatedStorage.events.SellAll:InvokeServer()
    end
})

TabAuto:AddButton({
    Title = "Sell Fish in Hand",
    Description = "‡∏Ç‡∏≤‡∏¢‡∏õ‡∏•‡∏≤‡πÉ‡∏ô‡∏°‡∏∑‡∏≠",
    Callback = function()
        ReplicatedStorage.events.Sell:InvokeServer()
    end
})

------------------------------------------------------------
-- üìÇ Tab : Teleport
------------------------------------------------------------
local TabTP = Window:AddTab({ Title = "Teleport", Icon = "rbxassetid://6035190842" })

local locations = {
    ["Merchant"] = Vector3.new(464.740417, 150.62973, 229.492584),
    ["Appraiser"] = Vector3.new(447.3258361816406, 150.54901123046875, 207.81690979003906),
    ["Gole Fisch"] = Vector3.new(-2675.18604, 170.5, 1742.26538),
    ["The Depths"] = Vector3.new(940.204407, -738.083374, 1457.24158),
    ["The Depths2"] = Vector3.new(1382.587646484375, -604.9406127929688, 2341.161376953125),
    ["Ancient Isle"] = Vector3.new(6069.5380859375, 194.9801483154297, 307.2333679199219),
    ["Mossjew"] = Vector3.new(-4863.9990234375, -1793.8779296875, -10125.3154296875),
    ["Kraken"] = Vector3.new(-4377.296875, -996.2604370117188, 2064.634033203125),
    ["Scylla"] = Vector3.new(-2339.830322265625, -11182.8818359375, 7074.814453125),
    ["Craft"] = Vector3.new(-3156.822021484375, -747.2178955078125, 1697.4261474609375),
    ["Sundial"] = Vector3.new(-1148, 134.499985, -1075),
    ["Windset"] = Vector3.new(2849, 178.333237, 2702),
    ["Smokescreen"] = Vector3.new(2789, 139.825485, -625),
    ["Tempest"] = Vector3.new(35, 132.500015, 1943),
    ["Aurora"] = Vector3.new(-1809.96142578125, -136.87164306640625, -3282.722900390625),
    ["QCrate"] = Vector3.new(-217.9184112548828, 135.0543975830078, 1893.77880859375),
    ["Enchant"] = Vector3.new(1309.3783, -805.221191, -98.6691666),
    ["Relic"] = Vector3.new(-957.766052, 222.000015, -987.641968)
}

local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")

local placeId = game.PlaceId
local currentJobId = game.JobId

local function teleport(location)
    local player = LocalPlayer
    if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        player.Character.HumanoidRootPart.CFrame = CFrame.new(location)
    end
end

TabTP:AddDropdown("Teleport NPC", {
    Title = "Select NPC",
    Values = {"Merchant", "Appraiser"},
    Multi = false,
    Callback = function(v)
        teleport(locations[v])
    end
})

TabTP:AddDropdown("Teleport Zone", {
    Title = "Select Zone",
    Values = {"Gole Fisch", "The Depths", "The Depths2", "Ancient Isle"},
    Multi = false,
    Callback = function(v)
        teleport(locations[v])
    end
})

TabTP:AddDropdown("Teleport Zone Boss", {
    Title = "Select Zone Boss",
    Values = {"Mossjew", "Kraken", "Scylla"},
    Multi = false,
    Callback = function(v)
        teleport(locations[v])
    end
})

TabTP:AddDropdown("Teleport Totem", {
    Title = "Select Totem",
    Values = {"Sundial", "Windset", "Smokescreen", "Tempest", "Aurora"},
    Multi = false,
    Callback = function(v)
        teleport(locations[v])
    end
})

TabTP:AddDropdown("Teleport Shop", {
    Title = "Select Shop",
    Values = {"Enchant", "Relic", "Craft", "QCrate"},
    Multi = false,
    Callback = function(v)
        teleport(locations[v])
    end
})

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
local function findRandomServer()
	local url = "https://games.roblox.com/v1/games/"..placeId.."/servers/Public?sortOrder=Asc&limit=100"

	local success, result = pcall(function()
		return game:HttpGet(url)
	end)

	if success then
		local data = HttpService:JSONDecode(result)
		local servers = {}

		for _, server in ipairs(data.data) do
			if server.id ~= currentJobId then
				table.insert(servers, server.id)
			end
		end

		if #servers > 0 then
			return servers[math.random(1, #servers)] -- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°
		end
	end
	return nil
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏™‡∏∏‡πà‡∏°
local function teleportToRandomServer()
	local jobId = findRandomServer()
	if jobId then
		TeleportService:TeleportToPlaceInstance(placeId, jobId, Players.LocalPlayer)
	else
		warn("‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏™‡∏∏‡πà‡∏°")
	end
end

TabTP:AddButton({
    Title = "TPRandomServer",
    Description = "TPRandomServer",
    Callback = function()
        teleportToRandomServer()
    end
})
